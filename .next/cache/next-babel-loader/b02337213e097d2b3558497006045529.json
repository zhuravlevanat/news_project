{"ast":null,"code":"import { select, put, takeEvery } from \"redux-saga/effects\";\nimport { getCurrentCategory } from \"../Categories/selector\";\nimport { changeLoadingState, failure, loadNewsSuccess } from \"./actions\";\nimport { actionTypes } from \"../../constants/actionTypes\";\nimport { getApiRequest } from \"../services/apiRequest\";\n\nfunction* loadNewsSaga() {\n  const currentCategory = yield select(state => getCurrentCategory(state));\n\n  try {\n    const {\n      articles\n    } = yield getApiRequest(currentCategory);\n    console.log(articles);\n    yield put(loadNewsSuccess(articles));\n  } catch (err) {\n    yield put(failure(err));\n  } finally {\n    yield put(changeLoadingState(false));\n  }\n}\n\nfunction* newsWatcher() {\n  yield takeEvery(actionTypes.LOAD_NEWS, loadNewsSaga);\n}\n\nexport default newsWatcher;","map":{"version":3,"sources":["/home/natalia/Documents/projects/news_project/src/redux/News/saga.js"],"names":["select","put","takeEvery","getCurrentCategory","changeLoadingState","failure","loadNewsSuccess","actionTypes","getApiRequest","loadNewsSaga","currentCategory","state","articles","console","log","err","newsWatcher","LOAD_NEWS"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,kBAAT,EAA6BC,OAA7B,EAAsCC,eAAtC,QAA6D,WAA7D;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,UAAUC,YAAV,GAAyB;AACrB,QAAMC,eAAe,GAAG,MAAMV,MAAM,CAACW,KAAK,IAAIR,kBAAkB,CAACQ,KAAD,CAA5B,CAApC;;AACA,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,MAAMJ,aAAa,CAACE,eAAD,CAAxC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMX,GAAG,CAACK,eAAe,CAACM,QAAD,CAAhB,CAAT;AACH,GAJD,CAIE,OAAOG,GAAP,EAAY;AACV,UAAMd,GAAG,CAACI,OAAO,CAACU,GAAD,CAAR,CAAT;AACH,GAND,SAMU;AACN,UAAMd,GAAG,CAACG,kBAAkB,CAAC,KAAD,CAAnB,CAAT;AACH;AACJ;;AAED,UAAUY,WAAV,GAAwB;AACpB,QAAMd,SAAS,CAACK,WAAW,CAACU,SAAb,EAAwBR,YAAxB,CAAf;AACH;;AAED,eAAeO,WAAf","sourcesContent":["import { select, put, takeEvery } from \"redux-saga/effects\";\nimport { getCurrentCategory } from \"../Categories/selector\";\nimport { changeLoadingState, failure, loadNewsSuccess } from \"./actions\";\nimport { actionTypes } from \"../../constants/actionTypes\";\nimport { getApiRequest } from \"../services/apiRequest\";\n\nfunction* loadNewsSaga() {\n    const currentCategory = yield select(state => getCurrentCategory(state));\n    try {\n        const { articles } = yield getApiRequest(currentCategory);\n        console.log(articles);\n        yield put(loadNewsSuccess(articles));\n    } catch (err) {\n        yield put(failure(err));\n    } finally {\n        yield put(changeLoadingState(false));\n    }\n}\n\nfunction* newsWatcher() {\n    yield takeEvery(actionTypes.LOAD_NEWS, loadNewsSaga);\n}\n\nexport default newsWatcher;"]},"metadata":{},"sourceType":"module"}