{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root/rootReducer';\nimport rootSaga from './root/rootSaga';\nvar sagaMiddleware = createSagaMiddleware();\nvar initState = {\n  categoryData: {\n    categories: [],\n    currentCategory: 'today',\n    newCategory: ''\n  },\n  newsData: {\n    news: [],\n    loading: false,\n    error: true\n  }\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var isServer = false;\n  var middleware = isServer || ['production', 'test'].includes(\"development\") ? applyMiddleware(sagaMiddleware) : window.__REDUX_DEVTOOLS_EXTENSION__ ? compose(applyMiddleware(sagaMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__()) : compose(applyMiddleware(sagaMiddleware));\n  var store = createStore(rootReducer, initialState, middleware);\n\n  store.runSagaTask = function () {\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n  };\n\n  store.runSagaTask();\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/home/natalia/Documents/projects/news_project/src/redux/store.js"],"names":["applyMiddleware","createStore","compose","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","initState","categoryData","categories","currentCategory","newCategory","newsData","news","loading","error","configureStore","initialState","isServer","middleware","includes","window","__REDUX_DEVTOOLS_EXTENSION__","store","runSagaTask","sagaTask","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,IAAMI,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAE,EADF;AAEVC,IAAAA,eAAe,EAAE,OAFP;AAGVC,IAAAA,WAAW,EAAE;AAHH,GADA;AAMdC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,OAAO,EAAE,KAFH;AAGNC,IAAAA,KAAK,EAAE;AAHD;AANI,CAAlB;;AAaA,SAASC,cAAT,GAAkD;AAAA,MAA1BC,YAA0B,uEAAXV,SAAW;AAC9C,MAAMW,QAAQ,QAAd;AACA,MAAMC,UAAU,GAAGD,QAAQ,IAAI,CAAC,YAAD,EAAe,MAAf,EAAuBE,QAAvB,eAAZ,GACbpB,eAAe,CAACM,cAAD,CADF,GAEZe,MAAM,CAACC,4BAAP,GACGpB,OAAO,CAACF,eAAe,CAACM,cAAD,CAAhB,EAAkCe,MAAM,CAACC,4BAAP,EAAlC,CADV,GAEGpB,OAAO,CAACF,eAAe,CAACM,cAAD,CAAhB,CAJjB;AAKA,MAAMiB,KAAK,GAAGtB,WAAW,CACrBG,WADqB,EAErBa,YAFqB,EAGrBE,UAHqB,CAAzB;;AAKAI,EAAAA,KAAK,CAACC,WAAN,GAAoB,YAAM;AACtBD,IAAAA,KAAK,CAACE,QAAN,GAAiBnB,cAAc,CAACoB,GAAf,CAAmBrB,QAAnB,CAAjB;AACH,GAFD;;AAGAkB,EAAAA,KAAK,CAACC,WAAN;AACA,SAAOD,KAAP;AACH;;AACD,eAAeP,cAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './root/rootReducer';\nimport rootSaga from './root/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst initState = {\n    categoryData: {\n        categories: [],\n        currentCategory: 'today',\n        newCategory: '',\n    },\n    newsData: {\n        news: [],\n        loading: false,\n        error: true,\n    },\n}\n\nfunction configureStore(initialState = initState) {\n    const isServer = typeof window === 'undefined';\n    const middleware = isServer || ['production', 'test'].includes(process.env.NODE_ENV)\n        ? applyMiddleware(sagaMiddleware)\n        : (window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(applyMiddleware(sagaMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__())\n            : compose(applyMiddleware(sagaMiddleware)));\n    const store = createStore(\n        rootReducer,\n        initialState,\n        middleware,\n    );\n    store.runSagaTask = () => {\n        store.sagaTask = sagaMiddleware.run(rootSaga);\n    };\n    store.runSagaTask();\n    return store;\n}\nexport default configureStore\n"]},"metadata":{},"sourceType":"module"}