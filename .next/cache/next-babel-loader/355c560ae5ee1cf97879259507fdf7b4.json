{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadNewsSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(newsWatcher);\n\nimport { select, put, takeEvery } from 'redux-saga/effects';\nimport { getCurrentCategory } from '../Categories/selector';\nimport { changeLoadingState, failure, loadNewsSuccess } from './actions';\nimport { actionTypes } from '../../constants/actionTypes';\n\nfunction loadNewsSaga() {\n  var currentCategory, res, data;\n  return _regeneratorRuntime.wrap(function loadNewsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return select(function (state) {\n            return getCurrentCategory(state);\n          });\n\n        case 2:\n          currentCategory = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return fetch(\"http://newsapi.org/v2/everything?q=\".concat(currentCategory, \"&apiKey=a34900e46a5f4b999e43deb5f1931cc6\"));\n\n        case 6:\n          res = _context.sent;\n          _context.next = 9;\n          return res.json();\n\n        case 9:\n          data = _context.sent;\n\n          if (!(data.status === 'ok')) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.next = 13;\n          return put(loadNewsSuccess(data.articles));\n\n        case 13:\n          _context.next = 15;\n          return put(changeLoadingState(false));\n\n        case 15:\n          _context.next = 19;\n          break;\n\n        case 17:\n          console.log('err', data.message);\n          throw new Error(data.message);\n\n        case 19:\n          _context.next = 27;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 25;\n          return put(changeLoadingState(false));\n\n        case 25:\n          _context.next = 27;\n          return put(failure(_context.t0));\n\n        case 27:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[3, 21]]);\n}\n\nfunction newsWatcher() {\n  return _regeneratorRuntime.wrap(function newsWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actionTypes.LOAD_NEWS, loadNewsSaga);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default newsWatcher;","map":{"version":3,"sources":["/home/natalia/Documents/projects/news_project/redux/News/saga.js"],"names":["loadNewsSaga","newsWatcher","select","put","takeEvery","getCurrentCategory","changeLoadingState","failure","loadNewsSuccess","actionTypes","state","currentCategory","fetch","res","json","data","status","articles","console","log","message","Error","LOAD_NEWS"],"mappings":";;;;yBAKUA,Y;;;yBAoBAC,W;;AAzBV,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAAQC,kBAAR,EAA4BC,OAA5B,EAAqCC,eAArC,QAA2D,WAA3D;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAEA,SAAUT,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC4B,iBAAME,MAAM,CAAC,UAAAQ,KAAK;AAAA,mBAAIL,kBAAkB,CAACK,KAAD,CAAtB;AAAA,WAAN,CAAZ;;AAD5B;AACUC,UAAAA,eADV;AAAA;AAAA;AAGoB,iBAAMC,KAAK,8CAAuCD,eAAvC,8CAAX;;AAHpB;AAGcE,UAAAA,GAHd;AAAA;AAIqB,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AAJrB;AAIcC,UAAAA,IAJd;;AAAA,gBAKYA,IAAI,CAACC,MAAL,KAAgB,IAL5B;AAAA;AAAA;AAAA;;AAAA;AAMY,iBAAMb,GAAG,CAACK,eAAe,CAACO,IAAI,CAACE,QAAN,CAAhB,CAAT;;AANZ;AAAA;AAOY,iBAAMd,GAAG,CAACG,kBAAkB,CAAC,KAAD,CAAnB,CAAT;;AAPZ;AAAA;AAAA;;AAAA;AASYY,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,IAAI,CAACK,OAAxB;AATZ,gBAUkB,IAAIC,KAAJ,CAAUN,IAAI,CAACK,OAAf,CAVlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAaQ,iBAAMjB,GAAG,CAACG,kBAAkB,CAAC,KAAD,CAAnB,CAAT;;AAbR;AAAA;AAcQ,iBAAMH,GAAG,CAACI,OAAO,aAAR,CAAT;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAAUN,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMG,SAAS,CAACK,WAAW,CAACa,SAAb,EAAwBtB,YAAxB,CAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeC,WAAf","sourcesContent":["import { select, put, takeEvery } from 'redux-saga/effects';\nimport { getCurrentCategory } from '../Categories/selector';\nimport {changeLoadingState, failure, loadNewsSuccess} from './actions';\nimport { actionTypes } from '../../constants/actionTypes';\n\nfunction* loadNewsSaga() {\n    const currentCategory = yield select(state => getCurrentCategory(state));\n    try {\n        const res = yield fetch(`http://newsapi.org/v2/everything?q=${currentCategory}&apiKey=a34900e46a5f4b999e43deb5f1931cc6`);\n        const data = yield res.json();\n        if (data.status === 'ok') {\n            yield put(loadNewsSuccess(data.articles));\n            yield put(changeLoadingState(false));\n        } else {\n            console.log('err', data.message);\n            throw new Error(data.message);\n        }\n    } catch (err) {\n        yield put(changeLoadingState(false));\n        yield put(failure(err));\n\n\n    }\n}\n\nfunction* newsWatcher() {\n    yield takeEvery(actionTypes.LOAD_NEWS, loadNewsSaga);\n}\n\nexport default newsWatcher;"]},"metadata":{},"sourceType":"module"}