{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadNewsSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(newsWatcher);\n\nimport { select, put, takeEvery } from \"redux-saga/effects\";\nimport { getCurrentCategory } from \"../Categories/selector\";\nimport { changeLoadingState, failure, loadNewsSuccess } from \"./actions\";\nimport { actionTypes } from \"../../constants/actionTypes\";\nimport { getApiRequest } from \"../services/apiRequest\";\n\nfunction loadNewsSaga() {\n  var currentCategory, _ref, articles;\n\n  return _regeneratorRuntime.wrap(function loadNewsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return select(function (state) {\n            return getCurrentCategory(state);\n          });\n\n        case 2:\n          currentCategory = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return getApiRequest(currentCategory);\n\n        case 6:\n          _ref = _context.sent;\n          articles = _ref.articles;\n          _context.next = 10;\n          return put(loadNewsSuccess(articles));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 16;\n          return put(failure(_context.t0));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[3, 12]]);\n}\n\nfunction newsWatcher() {\n  return _regeneratorRuntime.wrap(function newsWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actionTypes.LOAD_NEWS, loadNewsSaga);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default newsWatcher;","map":{"version":3,"sources":["/home/natalia/Documents/projects/news_project/src/redux/News/saga.js"],"names":["loadNewsSaga","newsWatcher","select","put","takeEvery","getCurrentCategory","changeLoadingState","failure","loadNewsSuccess","actionTypes","getApiRequest","state","currentCategory","articles","LOAD_NEWS"],"mappings":";;;;yBAMUA,Y;;;yBAUAC,W;;AAhBV,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,kBAAT,EAA6BC,OAA7B,EAAsCC,eAAtC,QAA6D,WAA7D;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,SAAUV,YAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC4B,iBAAME,MAAM,CAAC,UAAAS,KAAK;AAAA,mBAAIN,kBAAkB,CAACM,KAAD,CAAtB;AAAA,WAAN,CAAZ;;AAD5B;AACUC,UAAAA,eADV;AAAA;AAAA;AAG6B,iBAAMF,aAAa,CAACE,eAAD,CAAnB;;AAH7B;AAAA;AAGgBC,UAAAA,QAHhB,QAGgBA,QAHhB;AAAA;AAIQ,iBAAMV,GAAG,CAACK,eAAe,CAACK,QAAD,CAAhB,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMV,GAAG,CAACI,OAAO,aAAR,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUN,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMG,SAAS,CAACK,WAAW,CAACK,SAAb,EAAwBd,YAAxB,CAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeC,WAAf","sourcesContent":["import { select, put, takeEvery } from \"redux-saga/effects\";\nimport { getCurrentCategory } from \"../Categories/selector\";\nimport { changeLoadingState, failure, loadNewsSuccess } from \"./actions\";\nimport { actionTypes } from \"../../constants/actionTypes\";\nimport { getApiRequest } from \"../services/apiRequest\";\n\nfunction* loadNewsSaga() {\n    const currentCategory = yield select(state => getCurrentCategory(state));\n    try {\n        const { articles } = yield getApiRequest(currentCategory);\n        yield put(loadNewsSuccess(articles));\n    } catch (err) {\n        yield put(failure(err));\n    }\n}\n\nfunction* newsWatcher() {\n    yield takeEvery(actionTypes.LOAD_NEWS, loadNewsSaga);\n}\n\nexport default newsWatcher;"]},"metadata":{},"sourceType":"module"}