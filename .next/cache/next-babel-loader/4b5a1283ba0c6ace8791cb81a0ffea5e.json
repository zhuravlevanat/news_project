{"ast":null,"code":"import { select, put, takeEvery } from 'redux-saga/effects';\nimport { getCurrentCategory } from '../Categories/selector';\nimport { changeLoadingState, failure, loadNewsSuccess } from './actions';\nimport { actionTypes } from '../../constants/actionTypes';\n\nfunction* loadNewsSaga() {\n  const currentCategory = yield select(state => getCurrentCategory(state));\n\n  try {\n    const res = yield fetch(`http://newsapi.org/v2/everything?q=${currentCategory}&apiKey=a34900e46a5f4b999e43deb5f1931cc6`);\n    const data = yield res.json();\n\n    if (data.status === 'ok') {\n      yield put(loadNewsSuccess(data.articles));\n      yield put(changeLoadingState(false));\n    } else {\n      console.log('err', data.message);\n      throw new Error(data.message);\n    }\n  } catch (err) {\n    yield put(changeLoadingState(false));\n    yield put(failure(err));\n  }\n}\n\nfunction* newsWatcher() {\n  yield takeEvery(actionTypes.LOAD_NEWS, loadNewsSaga);\n}\n\nexport default newsWatcher;","map":{"version":3,"sources":["/home/natalia/Documents/projects/news_project/redux/News/saga.js"],"names":["select","put","takeEvery","getCurrentCategory","changeLoadingState","failure","loadNewsSuccess","actionTypes","loadNewsSaga","currentCategory","state","res","fetch","data","json","status","articles","console","log","message","Error","err","newsWatcher","LOAD_NEWS"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAAQC,kBAAR,EAA4BC,OAA5B,EAAqCC,eAArC,QAA2D,WAA3D;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAEA,UAAUC,YAAV,GAAyB;AACrB,QAAMC,eAAe,GAAG,MAAMT,MAAM,CAACU,KAAK,IAAIP,kBAAkB,CAACO,KAAD,CAA5B,CAApC;;AACA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCH,eAAgB,0CAAvD,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AACA,QAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AACtB,YAAMd,GAAG,CAACK,eAAe,CAACO,IAAI,CAACG,QAAN,CAAhB,CAAT;AACA,YAAMf,GAAG,CAACG,kBAAkB,CAAC,KAAD,CAAnB,CAAT;AACH,KAHD,MAGO;AACHa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,IAAI,CAACM,OAAxB;AACA,YAAM,IAAIC,KAAJ,CAAUP,IAAI,CAACM,OAAf,CAAN;AACH;AACJ,GAVD,CAUE,OAAOE,GAAP,EAAY;AACV,UAAMpB,GAAG,CAACG,kBAAkB,CAAC,KAAD,CAAnB,CAAT;AACA,UAAMH,GAAG,CAACI,OAAO,CAACgB,GAAD,CAAR,CAAT;AAGH;AACJ;;AAED,UAAUC,WAAV,GAAwB;AACpB,QAAMpB,SAAS,CAACK,WAAW,CAACgB,SAAb,EAAwBf,YAAxB,CAAf;AACH;;AAED,eAAec,WAAf","sourcesContent":["import { select, put, takeEvery } from 'redux-saga/effects';\nimport { getCurrentCategory } from '../Categories/selector';\nimport {changeLoadingState, failure, loadNewsSuccess} from './actions';\nimport { actionTypes } from '../../constants/actionTypes';\n\nfunction* loadNewsSaga() {\n    const currentCategory = yield select(state => getCurrentCategory(state));\n    try {\n        const res = yield fetch(`http://newsapi.org/v2/everything?q=${currentCategory}&apiKey=a34900e46a5f4b999e43deb5f1931cc6`);\n        const data = yield res.json();\n        if (data.status === 'ok') {\n            yield put(loadNewsSuccess(data.articles));\n            yield put(changeLoadingState(false));\n        } else {\n            console.log('err', data.message);\n            throw new Error(data.message);\n        }\n    } catch (err) {\n        yield put(changeLoadingState(false));\n        yield put(failure(err));\n\n\n    }\n}\n\nfunction* newsWatcher() {\n    yield takeEvery(actionTypes.LOAD_NEWS, loadNewsSaga);\n}\n\nexport default newsWatcher;"]},"metadata":{},"sourceType":"module"}