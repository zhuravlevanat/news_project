{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://newsapi.org\";\nconst apiKey = 'a34900e46a5f4b999e43deb5f1931cc6';\nconst todayDate = new Date().toJSON().slice(0, 10).replace(/-/g, \"-\");\nexport const getApiRequest = async category => {\n  try {\n    const {\n      data\n    } = await axios.get(`v2/everything?q=${category}&from=${todayDate}&apiKey=${apiKey}`);\n\n    if (data.status !== \"ok\") {\n      throw data.message;\n    }\n\n    return data;\n  } catch (err) {\n    console.error(err);\n    throw new Error(err);\n  }\n};","map":{"version":3,"sources":["/home/natalia/Documents/projects/news_project/src/redux/services/apiRequest.js"],"names":["axios","defaults","baseURL","apiKey","todayDate","Date","toJSON","slice","replace","getApiRequest","category","data","get","status","message","err","console","error","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,oBAAzB;AACA,MAAMC,MAAM,GAAG,kCAAf;AACA,MAAMC,SAAS,GAAG,IAAIC,IAAJ,GACbC,MADa,GAEbC,KAFa,CAEP,CAFO,EAEJ,EAFI,EAGbC,OAHa,CAGL,IAHK,EAGC,GAHD,CAAlB;AAKA,OAAO,MAAMC,aAAa,GAAG,MAAMC,QAAN,IAAkB;AAC3C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAClB,mBAAkBF,QAAS,SAAQN,SAAU,WAAUD,MAAO,EAD5C,CAAvB;;AAEA,QAAIQ,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AACtB,YAAMF,IAAI,CAACG,OAAX;AACH;;AACD,WAAOH,IAAP;AACH,GAPD,CAOE,OAAOI,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAM,IAAIG,KAAJ,CAAUH,GAAV,CAAN;AACH;AACJ,CAZM","sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"http://newsapi.org\";\nconst apiKey = 'a34900e46a5f4b999e43deb5f1931cc6';\nconst todayDate = new Date()\n    .toJSON()\n    .slice(0, 10)\n    .replace(/-/g, \"-\");\n\nexport const getApiRequest = async category => {\n    try {\n        const { data } = await axios.get(\n            `v2/everything?q=${category}&from=${todayDate}&apiKey=${apiKey}`);\n        if (data.status !== \"ok\") {\n            throw data.message;\n        }\n        return data;\n    } catch (err) {\n        console.error(err);\n        throw new Error(err);\n    }\n};"]},"metadata":{},"sourceType":"module"}